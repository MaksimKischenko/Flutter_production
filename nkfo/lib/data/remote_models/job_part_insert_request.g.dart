// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'job_part_insert_request.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

JobPartInsertRequest _$JobPartInsertRequestFromJson(
        Map<String, dynamic> json) =>
    JobPartInsertRequest(
      jobId: json['job_id'] as int?,
      orderNum: json['order_num'] as int?,
      sql: json['sql'] as String?,
      tmpFileName: json['tmp_file_name'] as String?,
      idFieldName: json['id_field_name'] as String?,
      isForCurPeriod: json['is_for_cur_period'] as String?,
      numOfPrevPeriod: json['num_of_prev_period'] as int?,
      periodType: json['period_type'] as int?,
      name: json['job_part_name'] as String?,
      isOn: json['is_on'] as String?,
      expDir: json['exp_dir'] as String?,
      actionType: json['action_type'] as int?,
      impDir: json['imp_dir'] as String?,
      afterImpDir: json['after_imp_dir'] as String?,
      logFileName: json['log_file_name'] as String?,
      ftpHost: json['ftp_host'] as String?,
      ftpPort: json['ftp_port'] as int?,
      ftpUsername: json['ftp_username'] as String?,
      ftpPassword: json['ftp_password'] as String?,
      proxyType: json['proxy_type'] as int?,
      proxyHost: json['proxy_host'] as String?,
      proxyPort: json['proxy_port'] as int?,
      proxyUsername: json['proxy_username'] as String?,
      proxyPassword: json['proxy_password'] as String?,
      isFtp: json['is_ftp'] as String?,
      isUseDate: json['is_use_date'] as String?,
      copyExpDir: json['copy_exp_dir'] as String?,
      runAs: json['run_as'] as int?,
      userNameAs: json['user_name_as'] as String?,
      passwordAs: json['password_as'] as String?,
      lastStatus: json['last_status'] as int?,
      lastExecDate: json['last_exec_date'] == null
          ? null
          : DateTime.parse(json['last_exec_date'] as String),
      sumFieldName: json['sum_field_name'] as String?,
      ftpIspassiveMode: json['ftp_ispassive_mode'] as String?,
      showFilterForLog: json['show_filter_for_log'] as String?,
      comFile: json['com_file'] as String?,
      paramComFile: json['param_com_file'] as String?,
      isFtpN: json['is_ftp_n'] as String?,
      ftpHostN: json['ftp_host_n'] as String?,
      ftpPortN: json['ftp_port_n'] as int?,
      ftpUsernameN: json['ftp_username_n'] as String?,
      ftpPasswordN: json['ftp_password_n'] as String?,
      ftpIspassiveModeN: json['ftp_ispassive_mode_n'] as String?,
      proxyTypeN: json['proxy_type_n'] as int?,
      proxyHostN: json['proxy_host_n'] as String?,
      proxyPortN: json['proxy_port_n'] as int?,
      proxyUsernameN: json['proxy_username_n'] as String?,
      proxyPasswordN: json['proxy_password_n'] as String?,
      messageTypeId: json['message_type_id'] as int?,
      maxFileSize: json['max_file_size'] as int?,
      useEsign: json['use_esign'] as int?,
      exportType: json['export_type'] as int?,
      reportId: json['report_id'] as int?,
      sidSerial: json['sid_serial'] as String?,
      dirInErr: json['dir_in_err'] as String?,
      baseId: json['base_id'] as String?,
      isForCurPeriodName: json['is_for_cur_period_name'] as String?,
      periodTypeName: json['period_type_name'] as String?,
      isOnName: json['is_on_name'] as String?,
      isFtpName: json['is_ftp_name'] as String?,
      isUseDateName: json['is_use_date_name'] as String?,
      runAsName: json['run_as_name'] as String?,
      lastStatusName: json['last_status_name'] as String?,
      ftpIsPassiveModeName: json['ftp_ispassive_mode_name'] as String?,
      showFilterForLogName: json['show_filter_for_log_name'] as String?,
      isFtpNname: json['is_ftp_n_name'] as String?,
      ftpIspassiveModeNname: json['ftp_ispassive_mode_n_name'] as String?,
      exportTypeName: json['export_type_name'] as String?,
      errorDatetime: json['error_datetime'] == null
          ? null
          : DateTime.parse(json['error_datetime'] as String),
      errorText: json['error_text'] as String?,
      actionTypeName: json['action_type_name'] as String?,
    );

Map<String, dynamic> _$JobPartInsertRequestToJson(
        JobPartInsertRequest instance) =>
    <String, dynamic>{
      'job_id': instance.jobId,
      'order_num': instance.orderNum,
      'sql': instance.sql,
      'tmp_file_name': instance.tmpFileName,
      'id_field_name': instance.idFieldName,
      'is_for_cur_period': instance.isForCurPeriod,
      'num_of_prev_period': instance.numOfPrevPeriod,
      'period_type': instance.periodType,
      'job_part_name': instance.name,
      'is_on': instance.isOn,
      'exp_dir': instance.expDir,
      'action_type': instance.actionType,
      'imp_dir': instance.impDir,
      'after_imp_dir': instance.afterImpDir,
      'log_file_name': instance.logFileName,
      'ftp_host': instance.ftpHost,
      'ftp_port': instance.ftpPort,
      'ftp_username': instance.ftpUsername,
      'ftp_password': instance.ftpPassword,
      'proxy_type': instance.proxyType,
      'proxy_host': instance.proxyHost,
      'proxy_port': instance.proxyPort,
      'proxy_username': instance.proxyUsername,
      'proxy_password': instance.proxyPassword,
      'is_ftp': instance.isFtp,
      'is_use_date': instance.isUseDate,
      'copy_exp_dir': instance.copyExpDir,
      'run_as': instance.runAs,
      'user_name_as': instance.userNameAs,
      'password_as': instance.passwordAs,
      'last_status': instance.lastStatus,
      'last_exec_date': instance.lastExecDate?.toIso8601String(),
      'sum_field_name': instance.sumFieldName,
      'ftp_ispassive_mode': instance.ftpIspassiveMode,
      'show_filter_for_log': instance.showFilterForLog,
      'com_file': instance.comFile,
      'param_com_file': instance.paramComFile,
      'is_ftp_n': instance.isFtpN,
      'ftp_host_n': instance.ftpHostN,
      'ftp_port_n': instance.ftpPortN,
      'ftp_username_n': instance.ftpUsernameN,
      'ftp_password_n': instance.ftpPasswordN,
      'ftp_ispassive_mode_n': instance.ftpIspassiveModeN,
      'proxy_type_n': instance.proxyTypeN,
      'proxy_host_n': instance.proxyHostN,
      'proxy_port_n': instance.proxyPortN,
      'proxy_username_n': instance.proxyUsernameN,
      'proxy_password_n': instance.proxyPasswordN,
      'message_type_id': instance.messageTypeId,
      'max_file_size': instance.maxFileSize,
      'use_esign': instance.useEsign,
      'export_type': instance.exportType,
      'report_id': instance.reportId,
      'sid_serial': instance.sidSerial,
      'dir_in_err': instance.dirInErr,
      'base_id': instance.baseId,
      'is_for_cur_period_name': instance.isForCurPeriodName,
      'period_type_name': instance.periodTypeName,
      'is_on_name': instance.isOnName,
      'is_ftp_name': instance.isFtpName,
      'is_use_date_name': instance.isUseDateName,
      'run_as_name': instance.runAsName,
      'last_status_name': instance.lastStatusName,
      'ftp_ispassive_mode_name': instance.ftpIsPassiveModeName,
      'show_filter_for_log_name': instance.showFilterForLogName,
      'is_ftp_n_name': instance.isFtpNname,
      'ftp_ispassive_mode_n_name': instance.ftpIspassiveModeNname,
      'export_type_name': instance.exportTypeName,
      'error_datetime': instance.errorDatetime?.toIso8601String(),
      'error_text': instance.errorText,
      'action_type_name': instance.actionTypeName,
    };
